version: "3.7"

services:
#   topic-api_gateway:
#     image: topic_api_gateway
#     container_name: topic_api_gateway
#     build: ./topic_api_gateway
#     depends_on:
#       - user_service
#       - topic_service
#       - article_service
#       - comment_service
#     ports:
#       - 80:8080

  user_service:
    image: user_service
    container_name: user_service
    build: ./user_service
    ports:
      - 6868:8080
    volumes:
      - ./user_service:/app/
    # environment:
    #   - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOSTNAME}/${DB_USER_SERVICE_POSTGRES}
    #   - AUTH_SECRET_KEY=${AUTH_SECRET_KEY}
    #   - AUTH_TOKEN_ALGORITHM=${AUTH_TOKEN_ALGORITHM}
    #   - AUTH_ACCESS_TOKEN_EXPIRE_MINUTES=${AUTH_ACCESS_TOKEN_EXPIRE_MINUTES}

  topic_service:
    image: topic_service
    container_name: topic_service
    build: ./topic_service
    ports:
      - 6869:8081
    volumes:
      - ./topic_service:/app/
    # environment:
    #   - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOSTNAME}/${DB_TOPIC_SERVICE_POSTGRES}
    #   # - USER_SERVICE_HOST_URL=${USER_SERVICE_HOST_URL}

  article_service:
    image: article_service
    container_name: article_service
    build: ./article_service
    ports:
      - 6871:8082
    volumes:
      - ./article_service:/app/
    # environment:
    #   - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOSTNAME}/${DB_ARTICLE_SERVICE_POSTGRES}
    #   # - USER_SERVICE_HOST_URL=${USER_SERVICE_HOST_URL}
    #   # - topic_SERVICE_HOST_URL=${TOPIC_SERVICE_HOST_URL}
