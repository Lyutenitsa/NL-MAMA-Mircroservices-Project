stages:
  - dockerComposeLocalDeploy
  - sonarQubecheck
  - buildDockerImageArticleService
  - buildDockerImageTopicService
  - buildDockerImageUserService
  - testArticleService
  - testTopicService
  - testUserService
  - deploy_article_service
  - deploy_topic_service
  - deploy_user_service
  

dockerComposeLocalBuild:
  stage: dockerComposeLocalDeploy
  tags: 
    - shell-runner-framework
  script:
    - echo "Docker compose deployment"
    - cd Backend
    - cp $ENV_FILE_DOCKER_COMPOSE .env
    - docker compose up 
  when: manual


sonarqube-check:
  stage: sonarQubecheck
  tags: 
    - docker-runner-framework
  image: 
    name: sonarsource/sonar-scanner-cli:latest
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - ls -a
    - cd Backend
    - export SONAR_SCANNER_VERSION=4.7.0.2747
    - export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux
    - export PATH=$SONAR_SCANNER_HOME/bin:$PATH
    - export SONAR_SCANNER_OPTS="-server"
    - echo $PATH
    - sonar-scanner -Dsonar.organization=gitlabfhict -Dsonar.projectKey=gitlabfhictsemester6 -Dsonar.sources=. -Dsonar.host.url=https://sonarcloud.io
  allow_failure: true
  only:
    - main
  when: manual


buildDockerImageArticleService:
  stage: buildDockerImageArticleService
  tags: 
    - shell-runner-framework
  before_script:
    - echo "Running before script"
    - docker login -u $docker_username -p $docker_access_token
  script:
    - echo "creating/updating docker image for article_service and uploading to DockerHub" 
    - cd Backend/article_service
    - docker build . -t lyutenitsa5/article_service:latest
    - docker push lyutenitsa5/article_service:latest
  allow_failure: true
  when: manual
  # only:
  #   changes:
  #     - Backend/article_service/**/*


buildDockerImageTopicService:
  stage: buildDockerImageTopicService
  tags: 
    - shell-runner-framework
  before_script:
    - echo "Running before script"
    - docker login -u $docker_username -p $docker_access_token
  script:
    - echo "creating/updating docker image for topic_service and uploading to DockerHub"
    - cd Backend/topic_service
    - docker build . -t lyutenitsa5/topic_service:latest
    - docker push lyutenitsa5/topic_service:latest
  allow_failure: true
  when: manual

  # only:
  #   changes:
  #     - Backend/topic_service/**/*


buildDockerImageUserService:
  stage: buildDockerImageUserService
  tags: 
    - shell-runner-framework
  before_script:
    - echo "Running before script"
    - docker login -u $docker_username -p $docker_access_token
  script:
    - echo "creating/updating docker image for user_service and uploading to DockerHub"
    - cd Backend/user_service
    - docker build . -t lyutenitsa5/user_service:latest
    - docker push lyutenitsa5/user_service:latest
  allow_failure: true
  when: manual

  # only:
  #   changes:
  #     - Backend/user_service/**/*


testArticleService: 
  image: python:3.9-slim-buster
  stage: testArticleService
  tags: 
    - docker-runner-framework

  script:
    - echo "This is test pipepline for article_service"
    - cd Backend/article_service
    - echo $ENV_FILE_ARTICLE_SERVICE
    - cp $ENV_FILE_ARTICLE_SERVICE .env_local
    - pip install -r requirements.txt
    - pytest
  allow_failure: true
  when: manual

  # only:
  #   changes:
  #     - Backend/article_service/**/*


testTopicService:
  image: python:3.9-slim-buster
  stage: testTopicService
  tags: 
    - docker-runner-framework
  script:
    - echo "This is test pipepline for topic_service"
    - cd Backend/topic_service
    - cp $ENV_FILE_TOPIC_SERVICE .env_local
    - pip install -r requirements.txt
    - pytest
  allow_failure: true
  when: manual

  # only:
  #   changes:
  #     - Backend/topic_service/**/*


testUserService:
  image: python:3.9-slim-buster
  stage: testUserService 
  tags: 
    - docker-runner-framework
  script:
    - echo "This is test pipepline for user_service"
    - cd Backend/user_service
    - cp $ENV_FILE_USER_SERVICE .env_local
    - pip install -r requirements.txt
    - pytest
  allow_failure: true
  when: manual
  # only:
  #   changes:
  #     - Backend/user_service/**/*


deploy_article_service:
  image: google/cloud-sdk
  stage: deploy_article_service
  tags: 
   - docker-runner-framework
  script:
    - echo "testing deploy job"
    - cp $gcloud_key_file gcloud-key.json
    - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
    - gcloud auth activate-service-account --key-file=gcloud-key.json
    - gcloud config set project semester6-individual
    - gcloud config set container/cluster nl-mama-cluster
    - gcloud config set compute/zone europe-west2-a
    - gcloud container clusters get-credentials nl-mama-cluster --zone europe-west2 --project semester6-individual
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" gcloud-deployment-article-service.yaml
    - kubectl apply -f gcloud-deployment-article-service.yaml
  allow_failure: true
  when: manual

deploy_topic_service:
  image: google/cloud-sdk
  stage: deploy_topic_service
  tags: 
   - docker-runner-framework
  script:
    - echo "testing deploy job"
    - cp $gcloud_key_file gcloud-key.json
    - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
    - gcloud auth activate-service-account --key-file=gcloud-key.json
    - gcloud config set project semester6-individual
    - gcloud config set container/cluster nl-mama-cluster
    - gcloud config set compute/zone europe-west2-a
    - gcloud container clusters get-credentials nl-mama-cluster --zone europe-west2 --project semester6-individual
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" gcloud-deployment-topic-service.yaml
    - kubectl apply -f gcloud-deployment-topic-service.yaml
  allow_failure: true
  when: manual

deploy_user_service:
  image: google/cloud-sdk
  stage: deploy_user_service
  tags: 
   - docker-runner-framework
  script:
    - echo "testing deploy job"
    - cp $gcloud_key_file gcloud-key.json
    - export USE_GKE_GCLOUD_AUTH_PLUGIN=True
    - gcloud auth activate-service-account --key-file=gcloud-key.json
    - gcloud config set project semester6-individual
    - gcloud config set container/cluster nl-mama-cluster
    - gcloud config set compute/zone europe-west2-a
    - gcloud container clusters get-credentials nl-mama-cluster --zone europe-west2 --project semester6-individual
    - sed -i "s/<VERSION>/${CI_COMMIT_SHORT_SHA}/g" gcloud-deployment-user-service.yaml
    - kubectl apply -f gcloud-deployment-user-service.yaml
  allow_failure: true
  when: manual





  
